#!/usr/bin/env python3

import os
import subprocess
from typing import Any
from datetime import timedelta
from requests.exceptions import ConnectionError, HTTPError

import requests


ICONS = {
    "Printing": "\U000f0e5b",  # 󰹛
    "Heating": "\U000f18b8",  # 󱢸
    "Alert": "\U000f11c0",  # 󱇀
}
ICONS["ERROR"] = ICONS["Alert"]

BLACK = f"#{os.environ.get('BASE16_COLOR_00_HEX')}"
RED = f"#{os.environ.get('BASE16_COLOR_08_HEX')}"
YELLOW = f"#{os.environ.get('BASE16_COLOR_0A_HEX')}"
AQUA = f"#{os.environ.get('BASE16_COLOR_0C_HEX')}"


def get_info() -> dict[Any, Any]:
    url = "https://octoprint.tobyvin.dev/api/job"
    headers = {"X-Api-Key": os.environ.get("OCTOPRINT_TOKEN")}
    resp = requests.get(url, headers=headers, timeout=5)
    resp.raise_for_status()
    return resp.json()


def main():
    match int(os.environ.get("BLOCK_BUTTON", "0")):
        case 1:
            subprocess.run(
                ["swaymsg", "exec", "mpv", "https://octoprint.tobyvin.dev/stream/1/"],
                capture_output=True,
            )

    try:
        data = get_info()
        state = data["state"]
        time = data["progress"].get("printTimeLeft", "?")
        if isinstance(time, int):
            time = timedelta(seconds=time)
    except (ConnectionError, HTTPError):
        state = "ERROR"
        time = "x"

    if not (icon := ICONS.get(state)):
        print("")
        return

    print(f" {icon} {time} \n")
    print(BLACK)
    match time:
        case str("x"):
            print(RED)
        case str("?"):
            print(YELLOW)
        case _:
            print(AQUA)


if __name__ == "__main__":
    main()
