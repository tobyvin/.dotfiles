#!/usr/bin/env python

import json
import os
import socket
import sys

import threading
import time


def print_json(output={}):
    print(json.dumps(output, ensure_ascii=False), flush=True)


def main():
    icon = "\U000f0309"  # ó°Œ‰
    colors = {
        "color": f"#{os.environ.get('BASE16_COLOR_00_HEX')}",
        "background": f"#{os.environ.get('BASE16_COLOR_0A_HEX')}",
    }
    socket_path = os.path.expandvars("$XDG_RUNTIME_DIR/yubikey-touch-detector.socket")
    status: dict[str, bool] = {}
    timer = None

    while True:
        try:
            sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
            sock.connect(socket_path)
        except Exception:
            print("Cannot connect to yubikey-touch-detector", file=sys.stderr)
            time.sleep(60)
            continue

        while data := sock.recv(5):
            [name, stat] = data.decode().split("_")
            status[name] = int(stat) == 1

            if timer and timer.is_alive():
                timer.cancel()

            if msg := " | ".join([k for k, v in status.items() if v]):
                output = {"full_text": f" {icon} {msg} "} | colors
                timer = threading.Timer(0.75, print_json, [output])
                timer.start()
            else:
                print_json()


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("received signal, exiting", file=sys.stderr)
        sys.exit(1)
