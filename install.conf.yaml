- defaults:
    link:
      create: true
      relink: true
      force: true
    shell:
      quiet: true
      stdin: true

- clean: ["~"]

- create:
    - ~/.local/share/bash-completion/completions
    - ~/.local/share/zsh/site-functions
    - ~/.bash.d
    - ~/.zsh.d

- shell:
    - description: Installing submodules
      command: git submodule update --init --recursive

    - description: Installing rust
      command:
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path && (
        rustup completions bash >~/.local/share/bash-completion/completions/rustup;
        rustup completions zsh >~/.local/share/zsh/site-functions/_rustup;
        rustup completions bash cargo >~/.local/share/bash-completion/completions/cargo;
        rustup completions zsh cargo >~/.local/share/zsh/site-functions/_cargo)

    - description: Installing Starship
      command:
        target=$(rustc -Vv | grep host | cut -d' ' -f2 | sed s/gnu/musl/ | sed s/armv7/arm/) &&
        scripts/install-crate.sh --git starship/starship --no-tag --target $target && (
        starship completions bash >~/.local/share/bash-completion/completions/starship;
        starship completions zsh >~/.local/share/zsh/site-functions/_starship)

    - description: Installing fzf
      command: td=$(mktemp -d) &&
        arch="$(uname -m | sed s/aarch64/arm64/ | sed s/x86_64/amd64/ | sed s/armv7l/armv7/)" &&
        tag="$(curl -sI https://github.com/junegunn/fzf/releases/latest | grep -Po 'tag\/v?\K(\S+)')" &&
        name="fzf-${tag}-linux_${arch}" &&
        url="https://github.com/junegunn/fzf/releases/latest/download/${name}.tar.gz" &&
        curl -sL $url | tar -C $td -xz &&
        test -x $td/fzf &&
        rm -f ~/.local/bin/fzf &&
        install -Dm 755 $td/fzf ~/.local/bin/fzf &&
        rm -rf $td && (
        curl -sL https://raw.githubusercontent.com/junegunn/fzf/master/shell/completion.bash >~/.local/share/bash-completion/completions/fzf;
        curl -sL https://raw.githubusercontent.com/junegunn/fzf/master/shell/completion.zsh >~/.local/share/zsh/site-functions/_fzf;
        curl -sL https://raw.githubusercontent.com/junegunn/fzf/master/shell/key-bindings.bash >~/.bash.d/fzf-key-bindings.sh;
        curl -sL https://raw.githubusercontent.com/junegunn/fzf/master/shell/key-bindings.zsh >~/.zsh.d/fzf-key-bindings.zsh;
        )

    - description: Installing bat
      command:
        target=$(rustc -Vv | grep host | cut -d' ' -f2 | sed s/armv7/arm/) &&
        scripts/install-crate.sh --git sharkdp/bat --target $target --completion-bash --completion-zsh ~/.local/share/zsh/site-functions &&

    - description: Installing cheat.sh
      command: curl https://cht.sh/:cht.sh >~/.local/bin/cht.sh &&
        chmod +x ~/.local/bin/cht.sh && (
        curl https://cht.sh/:bash_completion >~/.local/share/bash-completion/completions/cht;
        curl https://cheat.sh/:zsh >~/.local/share/zsh/site-functions/_cht)

    - description: Installing gh
      command: td=$(mktemp -d) &&
        arch="$(uname -m | sed s/aarch64/arm64/ | sed s/x86_64/amd64/ | sed s/armv7l/armv6/)" &&
        tag="$(curl -sI https://github.com/cli/cli/releases/latest | grep -Po 'tag\/v?\K(\S+)')" &&
        name="gh_${tag}_linux_${arch}" &&
        url="https://github.com/cli/cli/releases/latest/download/${name}.tar.gz" &&
        curl -sL $url | tar -C $td -xz &&
        test -x $td/$name/bin/gh &&
        install -Dm 755 $td/$name/bin/gh ~/.local/bin/gh &&
        rm -rf $td && (
        gh completion --shell bash >~/.local/share/bash-completion/completions/gh;
        gh completion --shell zsh >~/.local/share/zsh/site-functions/_gh)

    - description: Installing git-open
      command:
        curl -sL "https://raw.githubusercontent.com/paulirish/git-open/master/git-open" >~/.local/bin/git-open &&
        chmod +x ~/.local/bin/git-open;

    - description: Installing git completions
      command: \! command -v git &> /dev/null ||
        url=https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion && (
        curl -sL ${url}.bash >~/.local/share/bash-completion/completions/git;
        curl -sL ${url}.zsh >~/.local/share/zsh/site-functions/_git)

    - description: Installing dotnet completions
      command: \! command -v dotnet &> /dev/null ||
        url=https://raw.githubusercontent.com/dotnet/cli/master/scripts/register-completions && (
        curl -sL ${url}.bash >~/.local/share/bash-completion/completions/dotnet;
        curl -sL ${url}.zsh >~/.local/share/zsh/site-functions/_dotnet)

    - description: Installing docker completions
      command: \! command -v docker &> /dev/null ||
        url=https://raw.githubusercontent.com/docker/cli/master/contrib/completion && (
        curl -sL ${url}/bash/docker >~/.local/share/bash-completion/completions/docker;
        curl -sL ${url}/zsh/_docker >~/.local/share/zsh/site-functions/_docker)

    - description: Installing pandoc completions
      command: \! command -v pandoc &> /dev/null ||
        url=https://raw.githubusercontent.com/srijanshetty/zsh-pandoc-completion/master/_pandoc && (
        pandoc --bash-completion >~/.local/share/bash-completion/completions/docker;
        curl -sL ${url} >~/.local/share/zsh/site-functions/_pandoc)

    - description: Installing zsh-autosuggestions
      command: repo=https://github.com/zsh-users/zsh-autosuggestions &&
        target=~/.zsh.d/zsh-autosuggestions &&
        rm -rf $target &&
        git clone $repo $target

    - description: Installing zsh-syntax-highlighting
      command: repo=https://github.com/zsh-users/zsh-syntax-highlighting
        target=~/.zsh.d/zsh-syntax-highlighting &&
        rm -rf $target &&
        git clone $repo $target

- link:
    ~/.bashrc:
    ~/.zshrc:
    ~/.config/starship.toml: starship.toml
    ~/.config/alacritty.yml: alacritty.yml
    ~/.gitconfig:
    ~/.ssh/config: ssh/config
    ~/.gnupg/:
      glob: true
      path: gnupg/*.conf

- shell:
    # ISSUE #1 Fails to import key inside of WSL2
    - description: Installing gpg key
      command: gpg --recv-key 0xC8F6E06F5C8E2634
    - description: Importing GPG trustfile
      command: gpg --import-ownertrust gnupg/trustfile.txt

- shell:
    - description: ""
      command: if [ -n "${WSL_DISTRO_NAME+1}" ]; then ./wsl.install; fi
      stdout: true
      # stderr: true
