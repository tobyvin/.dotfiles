#!/bin/sh
# shellcheck disable=2016

if [ "$#" -ne 0 ]; then
	selection="$1"
else
	PROJECT_DIR="$HOME/src"
	DIRS="$HOME/.dotfiles"

	for entry in "$PROJECT_DIR"/*; do
		if [ -d "$entry" ]; then
			DIRS="$DIRS $entry"
		fi
	done

	DIRS="$(printf %s\\n "$DIRS" | xargs -I{} -d ' ' sh -c 'uri="{}"
	session_file="$XDG_DATA_HOME/nvim/sessions/$(echo "$uri" | sed "s|/|%|g").vim"
	if [ -f "$session_file" ]; then
		stat -c %Y:"$uri" "$session_file"
	elif git -C "$uri" rev-parse HEAD >/dev/null 2>&1; then
		git -C "$uri" --no-pager log -1 --all --format="%at:$uri" 2>/dev/null
	elif [ -e "$uri/.git" ]; then
		stat -c %Y:"$uri" "$uri"/.git
	else
		stat -c %Y:"$uri" "$uri"
  fi' | sort -r | cut -d':' -f2)"

	# grep -P '((git|ssh|http(s)?)|(git@[\w\.]+))(:(//)?)([\w\.@\:/\-~]+)(\.git)(/)?'
	output="$(printf %s\\n "$DIRS" | fzf-tmux -p -- --print-query -d/ --with-nth -2.. \
		--preview="$FZF_PREVIEW_COMMAND ||
    printf '%s' {q} | sed 's|/\$||' | xargs hut git show 2>/dev/null ||
    gh repo view {q} 2>/dev/null ||
    printf 'Create new project:\n %s' {q} |
    sed 's|^ \([^/~][^/]*\)\$| $HOME/\1|' |
    sed 's/^ //'" |
		tr -s '\n' ' ')"

	query="$(printf %s\\n "$output" | cut -d' ' -f1)"
	selection="$(printf %s\\n "$output" | cut -d' ' -f2)"
fi

if [ -z "$selection" ]; then
	if [ -z "$query" ]; then
		exit 0
	fi
	query=$(printf %s "$query" | sed 's/.git$//' | sed 's|/$||')
	selection="$HOME/src/$(basename "$query")"
	if [ ! -d "$selection" ]; then
		if hut git show "$query" >/dev/null 2>&1; then
			git clone "https://git.sr.ht/$query" "$selection" ||
				git clone "$query" "$selection" ||
				exit 1
		elif gh repo view "$query" >/dev/null 2>&1; then
			git clone "https://github.com/$query" "$selection" ||
				git clone "$query" "$selection" ||
				exit 1
		else
			exit 0
		fi
	fi
fi

name=$(basename "$selection" | tr . _)

if [ -z "$TMUX" ] && pgrep tmux; then
	tmux new-session -s "$name" -c "$selection"
	exit 0
fi

if ! tmux has-session -t="$name" 2>/dev/null; then
	tmux new-session -ds "$name" -c "$selection"
fi

tmux switch-client -t "$name"
